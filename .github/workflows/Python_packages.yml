# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13.0-rc.1"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install pylint 
        python -m pip install autopep8
        python -m pip install pyright
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov

    # - name: autopep8 verification
    #   run: |
    #     autopep8 $(git ls-files '*.py')

    # ⁠- ⁠name: Run autopep8
    #   run: autopep8 --in-place --aggressive --aggressive --recursive .

  #  "- name: Check for changes
  #     run: git diff --exit-code || (git config user.name "github-actions" && git config user.email "github-actions@github.com" && git commit -am "Apply autopep8 formatting" && git push)


    - name: pyright verification
      run: |
        pyright $(git ls-files '*.py')

    - name: bandit verification
      run: |
        bandit $(git ls-files '*.py')
